<?php


/**
 * Implements hook_init(). 
 */
function islandora_solr_facet_pages_init() {

  // include solrPhpClient
  module_load_include('php', 'islandora_solr_search', 'SolrPhpClient/Apache/Solr/Service');
  // include islandora solr common.inc
  module_load_include('inc', 'islandora_solr_search', 'includes/common');
}


/**
 * Implements hook_menu().
 */
function islandora_solr_facet_pages_menu() {
  // @TODO: create separate permission?  
  $items['browse'] = array(
    'page callback' => 'islandora_solr_facet_pages_callback',
    'page arguments' => array(1, 2),
    'access arguments' => array('view fedora collection'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/settings/islandora_solr_search/facet_pages'] = array(
    'title' => 'Facet Pages',
    'description' => 'Islandora Solr facet pages settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_solr_facet_pages_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'file' => 'islandora_solr_facet_pages.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  
  return $items;
}


/**
 * Implements hook_theme().
 */
function islandora_solr_facet_pages_theme() {
  // set path
  $path = drupal_get_path('module', 'islandora_solr_facet_pages');
  $file = 'islandora_solr_facet_pages.theme.inc';

  // results
  return array(
    'islandora_solr_facet_pages_wrapper' => array(
      'path' => $path . '/theme',
      'file' => $file,
      'template' => 'islandora-solr-facet-pages-wrapper',
      'arguments' => array(
        'letterer' => NULL,
        'results' => NULL,
        'pager' => NULL,
        'path' => NULL
      ),
    ),
    'islandora_solr_facet_pages_results' => array(
      'path' => $path . '/theme',
      'file' => $file,
      'template' => 'islandora-solr-facet-pages-results',
      'arguments' => array('results' => array(),
        'solr_field' => NULL,
        'path' => NULL
      ),
    ),
    'islandora_solr_facet_pages_letterer' => array(
      'path' => $path . '/theme',
      'file' => $file,
      'arguments' => array(
        'facet_queries' => array(),
        'fq_map' => array(),
        'prefix' => NULL,
        'path' => NULL
      ),
    ),
    'islandora_solr_facet_pages_admin_table' => array(
      'file' => 'islandora_solr_facet_pages.admin.inc',
      'arguments' => array('form' => array())
    ),
      
  );
}







function _islandora_solr_facet_pages_letterer($solr, $solr_field, $prefix) {
  $fq = array();
  $fq_map = array();
  foreach (range('A', 'Z') as $letter) {
    $value = "$solr_field:$letter*";
    $fq_map[$value] = $letter;
    $fq[] =  $value;
  }
  
  // set facet parameters
  $params = array(
    'facet' => 'true',
    'facet.field' => $solr_field,
    'facet.sort' => 'index',
    'facet.mincount' => 1,
    'facet.limit' => 0,
    'facet.query' => $fq,
    'qt' => variable_get('islandora_solr_search_block_request_handler', 'standard'),
  );
  
  // set query
  $query = "$solr_field:[* TO *]";
  // solr results in json format
  $result_object = json_decode($solr->search($query, 0, 0, $params)->getRawResponse());

  // facet queries
  $facet_queries = $result_object->facet_counts->facet_queries;

  // render current and all counts
  $count_all = 0;
  foreach ($facet_queries as $filter => $bucket_size) {
    $count_all += $bucket_size;
    
    if ($fq_map[$filter] == $prefix) {
      $count_current = $bucket_size;
    }
  } 

  // return array
  return array(
    'facet_queries' => $facet_queries,
    'fq_map' => $fq_map,
    'count' => array(
      'all' => $count_all,
      'current' => $count_current
    ),
  );
}







function _islandora_solr_facet_pages_results($solr, $solr_field, $prefix) {
  
  $params = $_GET;
  unset($params['q']);

  // get page limit
  $limit = variable_get('islandora_solr_facet_pages_limit', 25);
  
  // get the actual results.
  $query = "$solr_field:[* TO *]";
  if ($q !== NULL) {
    $query .= "AND $q";
  }
  
  // set facet parameters
  $facet_params = array(
    'facet' => 'true',
    'facet.field' => $solr_field,
    'facet.sort' => 'index',
    'facet.mincount' => 1,
    'facet.limit' => (empty($limit) OR $limit == 0) ? 10000 : $limit,
//    'facet.missing' => true,
    'qt' => variable_get('islandora_solr_search_block_request_handler', 'standard'),
  );
  // set offset
  if ($params['page']) {
    $facet_params['facet.offset'] = $params['page'] * $limit;
  }
  else {
    $facet_params['facet.offset'] = 0;
  }
  
  // set the facet prefix
  if ($prefix != t('ALL')) {
    $facet_params['facet.prefix'] = $prefix;
  }
  
  // solr results in json format
  $result_object = json_decode($solr->search($query, 0, 0, $facet_params)->getRawResponse());

  // collect results
  $results = array();
  foreach ($result_object->facet_counts->facet_fields->$solr_field as $value => $count) {
    $results[] = array(
      'value' => $value,
      'count' => $count,
    );
  }
  
  // return results array
  return $results;
}






/**
 * Callback function
 *
 * @param string $field
 *   machine readable name passed in the url to decide what solr field to facet
 *   on.
 * @param string $prefix
 *   letter of the alphabet to filter on.
 * @return string
 *   rendered list of results
 */
function islandora_solr_facet_pages_callback($path = NULL, $prefix = NULL) {
  
  // get available fields from variable
  $fields = variable_get('islandora_solr_facet_pages_fields_data', array());
  
  $found = FALSE;
  foreach ($fields as $key => $value) {
    if ($path == $value['path']) {
      // set variables
      $solr_field = $value['solr_field'];
      drupal_set_title($value['label']);
      // set found
      $found = TRUE;
    }
  }
  
  if (!$found) {
    return drupal_not_found();
  }

  // set default prefix
  if ($prefix === NULL) {
    $prefix = t('ALL');
  }

  // include base css file
  $base_css = drupal_get_path('module', 'islandora_solr_facet_pages') . '/css/islandora_solr_facet_pages.base.css';
  drupal_add_css($base_css);
  
  // use Solr faceting to get list of names
  $parsed_url = parse_url(variable_get('islandora_solr_search_block_url', 'http://localhost:8080/solr'));
  $solr = new Apache_Solr_Service($parsed_url['host'], $parsed_url['port'], $parsed_url['path']);

  // render letters
  $letterer_arr = _islandora_solr_facet_pages_letterer($solr, $solr_field, $prefix);
  $letterer = theme('islandora_solr_facet_pages_letterer', $letterer_arr['facet_queries'], $letterer_arr['fq_map'], $prefix, $path);
  
  // render results
  $results_arr = _islandora_solr_facet_pages_results($solr, $solr_field, $prefix);
  $results = theme('islandora_solr_facet_pages_results', $results_arr, $solr_field, $path);

  // render pager
  // init pager
  $limit = variable_get('islandora_solr_facet_pages_limit', 25);
  if (!empty($limit) AND $limit != 0) {
    if ($prefix == t('ALL')) {
      $total = $letterer_arr['count']['all'];
    }
    else {
      $total = $letterer_arr['count']['current'];
    }


    islandora_solr_search_pager_init($total, $limit);
    $pager = theme('pager', array(), $limit, 0, NULL, 5);
  }
  else {
    $pager = NULL;
  }
  
  return theme('islandora_solr_facet_pages_wrapper', $letterer, $results, $pager, $path);;
}
